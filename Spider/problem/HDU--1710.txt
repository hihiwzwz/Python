Binary Tree Traversals

1000

32768

0

0

A binary tree is a finite set of vertices that is either empty or consists of a root r and two disjoint binary trees called the left and right subtrees. There are three most important ways in which the vertices of a binary tree can be systematically traversed or ordered. They are preorder, inorder and postorder. Let T be a binary tree with root r and subtrees T1,T2.<br><br>In a preorder traversal of the vertices of T, we visit the root r followed by visiting the vertices of T1 in preorder, then the vertices of T2 in preorder.<br><br>In an inorder traversal of the vertices of T, we visit the vertices of T1 in inorder, then the root r, followed by the vertices of T2 in inorder.<br><br>In a postorder traversal of the vertices of T, we visit the vertices of T1 in postorder, then the vertices of T2 in postorder and finally we visit r.<br><br>Now you are given the preorder sequence and inorder sequence of a certain binary tree. Try to find out its postorder sequence.<br><center><img style='max-width:100%;' src=http://acm.hdu.edu.cn//data/images/C57-1005-1.jpg></center>

The input contains several test cases. The first line of each test case contains a single integer n (1&lt;=n&lt;=1000), the number of vertices of the binary tree. Followed by two lines, respectively indicating the preorder sequence and inorder sequence. You can assume they are always correspond to a exclusive binary tree.<br>

For each test case print a single line specifying the corresponding postorder sequence.<br>

9
1 2 4 7 3 5 8 9 6
4 7 2 1 8 5 9 3 6

7 4 2 8 9 5 6 3 1

HDU 2007-Spring Programming Contest 



